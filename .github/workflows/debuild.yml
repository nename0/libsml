---
name: Debuild Release
'on':
  release:
    types: published

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  debuild:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: install devscripts
        run: sudo apt-get install equivs devscripts
      - uses: actions/checkout@v2
      - name: install dependencies
        run: sudo mk-build-deps -ri
      - name: debuild
        run: debuild --no-sign
      - name: import GPG key
        # A secret passphrase is used because the key is stored on disk where
        # it may persist while the passphrase is not.
        run: |
          echo -e "$SIGNING_KEY" | \
              gpg --batch --passphrase "$SIGNING_PASSPHRASE" --import
          gpg --list-secret-keys
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
      - name: debsign
        run: |
          debsign -k"$SIGNING_KEY_ID" -p"gpg --batch --pinentry-mode loopback \
              --passphrase $SIGNING_PASSPHRASE"
        env:
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          # This is not a secret, but we want to have all signing
          # configuration in one place
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
      - name: upload
        run: |
          set -x
          tag_name="${GITHUB_REF##*/}"
          build_tag="$tag_name-build$(date +'%F-%H-%m-%S-%N')"
          git tag $build_tag
          # https://support.github.com/ticket/personal/0/1996818
          #git push origin $build_tag
          assets=()
          for asset in ../libsml*.{tar.xz,dsc,changes,buildinfo}; do
            assets+=("-a" "$asset")
          done
          hub release edit "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pbuilder:
    needs: debuild
    strategy:
      matrix:
        architecture: [armhf,arm64,amd64]
        distribution: [unstable]
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: install pbuilder
        run: |
          sudo apt-get install pbuilder qemu-user-static \
            debian-archive-keyring
        # Needed for the release download
      - uses: actions/checkout@v2
      - name: download source release
        run: |
          set -x
          tag_name="${GITHUB_REF##*/}"
          hub release download "$tag_name"
          ls -l
      - name: configure pbuilder
        run: |
          echo "MIRRORSITE=http://ftp2.de.debian.org/debian/
          HOOKDIR=/var/cache/pbuilder/hooks" | \
            sudo tee /root/.pbuilderrc
          sudo mkdir -p /var/cache/pbuilder/hooks
          echo "#!/bin/sh

          apt-get -y install gnupg debian-archive-keyring
          apt-key adv --keyserver pgp.mit.edu --recv-keys $SIGNING_KEY_ID" | \
            sudo tee /var/cache/pbuilder/hooks/G70Keys
        env:
          # This is not a secret, but we want to have all signing
          # configuration in one place
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
      - name: create bootstrap
        run: |
          sudo pbuilder create --architecture ${{ matrix.architecture }} \
                 --distribution ${{ matrix.distribution }} \
                 --debootstrap qemu-debootstrap \
                 --basetgz /var/cache/pbuilder/current.tgz \
                 --debootstrapopts --keyring=/usr/share/keyrings/debian-archive-keyring.gpg
      - name: pbuild ${{ matrix.architecture }} ${{ matrix.distribution }}
        run: |
          version="${GITHUB_REF##*/v}"
          sudo pbuilder build \
                 --architecture  ${{ matrix.architecture }} \
                 --basetgz /var/cache/pbuilder/current.tgz libsml_$version.dsc
      - name: upload
        run: |
          set -x
          tag_name="${GITHUB_REF##*/}"
          build_tag="$tag_name-build$(date +'%F-%H-%m-%S-%N')"
          git tag $build_tag
          # https://support.github.com/ticket/personal/0/1996818
          #git push origin $build_tag
          assets=()
          for asset in /var/cache/pbuilder/result/libsml*.deb; do
            assets+=("-a" "$asset")
          done
          hub release edit "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
